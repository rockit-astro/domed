#!/usr/bin/env python3
#
# This file is part of domed.
#
# domed is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# domed is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with domed.  If not, see <http://www.gnu.org/licenses/>.

"""Commandline client for controlling domed"""

import datetime
import sys
import Pyro4

DAEMON_URI = 'PYRO:dome_daemon@localhost:9004'

FMT_GREEN = u'\033[92m'
FMT_RED = u'\033[91m'
FMT_CYAN = u'\033[96m'
FMT_YELLOW = u'\033[93m'
FMT_BOLD = u'\033[1m'
FMT_CLEAR = u'\033[0m'

STATUS_DESCRIPTIONS = {
    0: FMT_RED + 'CLOSED' + FMT_CLEAR,
    1: FMT_GREEN + 'OPEN' + FMT_CLEAR,
    2: FMT_CYAN + 'PARTIALLY OPEN' + FMT_CLEAR,
    3: FMT_YELLOW + 'OPENING' + FMT_CLEAR,
    4: FMT_YELLOW + 'CLOSING' + FMT_CLEAR,
}

def print_status():
    """Prints the dome status in human-readable form"""
    error = None
    try:
        with Pyro4.Proxy(DAEMON_URI) as dome:
            status = dome.status()
            error = dome.last_error()
    except Pyro4.errors.CommunicationError:
        print('Failed to query Dome daemon')
        return 1

    date = datetime.datetime.strptime(status[0], '%Y-%m-%dT%H:%M:%SZ')
    print('Dome status at: {0}'.format(FMT_BOLD + str(date) + FMT_CLEAR))
    print('  East shutter: {}'.format(STATUS_DESCRIPTIONS[status[1]]))
    print('  West shutter: {}'.format(STATUS_DESCRIPTIONS[status[2]]))

    if error[0] is not None:
        print('Last error was at {}'.format(error[0]))
        print(error[1])
    return 0

if __name__ == '__main__':
    sys.exit(print_status())
